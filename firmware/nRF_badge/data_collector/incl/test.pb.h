/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Tue Sep  4 02:09:10 2018. */

#ifndef PB_TEST_PB_H_INCLUDED
#define PB_TEST_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Message {
    bool has_test;
    uint32_t test;
/* @@protoc_insertion_point(struct:Message) */
} Message;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Message_init_default                     {false, 0}
#define Message_init_zero                        {false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Message_test_tag                         1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Message_fields[2];

/* Maximum encoded size of messages (where known) */
#define Message_size                             6

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TEST_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
